@model ControlPanel.Models.ExamDto
@{
    Layout = null;
}

<!DOCTYPE html>
<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>

@using (Html.BeginForm("AddEditExam", "Exam", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="container PanelContainer" style="width:500px;">
        <div class="panel panel-primary">
            <div class="panel-heading">بيانات الاختبار</div>
            <div class="panel-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExamName, new { @class = "control-label" })
                            @Html.EditorFor(model => model.ExamName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExamName)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateAdded, new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateAdded)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserDropDownList, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.UserId, Model.UserDropDownList,
                           new { @class = "form-control", role = "menu", datatoggle = "dropdown", id = "UserDropDownList" })
                            @Html.ValidationMessageFor(model => model.UserDropDownList)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MaterialDropDownList, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.MaterialId, Model.MaterialDropDownList,
                           new { @class = "form-control", role = "menu", datatoggle = "dropdown", id = "MateriaDropDown" })
                            @Html.ValidationMessageFor(model => model.MaterialDropDownList)
                        </div>
                    </div>
                </div>

               

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status)
                        </div>
                    </div>
                </div>



                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Degree, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Degree)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NumberOfQuestions, new { @class = "control-label" })
                            @Html.EditorFor(model => model.NumberOfQuestions, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumberOfQuestions)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @{

                        if (Model.Id == 0)
                        {
                            if ((int)Session["numberOfTrainers"] == 0 || (int)Session["numberOfMaterials"] == 0)
                            {
                                <input value="قم بتسجيل المدربين والمواد أولا!" class="btn btn-success disabled" style="width:100%" />
                            }
                            else
                            {
                                <input type="submit" value="اضافة" class="btn btn-success" style="width:100%" />
                            }
                        }
                        else
                        {
                            <input type="submit" value="تعديل" class="btn btn-success" style="width:100%" />
                        }
                    }
                </div>


            </div>
        </div>
    </div>
                        }
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>$.validator.setDefaults({ onkeyup: false });</script>
<script>
    DropDownSuggestions('UserDropDownList');
    DropDownSuggestions('MateriaDropDown');
</script>